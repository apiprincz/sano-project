{"version":3,"sources":["assets/img/plus.svg","components/cart/cart.js","components/BuildControls/BuildControl/category/categoryItem/categoryItem.js","components/BuildControls/BuildControl/category/category.js","components/BuildControls/BuildControl/categoryTitle/categorytitle.js","components/BuildControls/BuildControl/BuildControl.js","components/BuildControls/BuildControls.js","components/shop/shop.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","cart","props","className","categoryitem","children","onClick","increaseItemCount","src","Plus","alt","category","item","map","decreaseItemCount","categorytitle","title","buildcontrol","Array","replace","Buildcontrols","e","preventDefault","console","log","target","ul","Object","entries","this","allshop","list","keys","newItem","index","key","Component","Shop","state","categories","car","volvo","mazda","corrola","tel","mtn","airtel","confectionaries","cake","candy","food","rice","beans","clothings","shirt","Trouser","home_Appliances","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,kC,ySCgB5BC,G,YAZF,SAACC,GAEV,OACI,yBAAKC,UAAU,QACX,kD,uCCgBGC,G,MAnBM,SAACF,GAIlB,OACI,yBAAKC,UAAU,gBACX,4BAAKD,EAAMG,UACX,yBAAKF,UAAU,gBAEX,6BACI,yBAAKG,QAASJ,EAAMK,kBAAmBJ,UAAU,WAAWK,IAAKC,IAAMC,IAAK,cCWjFC,EAtBE,SAACT,GAKd,OAEQ,wBAAIC,UAAU,YAETD,EAAMU,KAAKC,KAAI,SAAAD,GACV,OAAO,kBAAC,EAAD,CAAcE,kBAAmBZ,EAAMY,mBAAoBF,QCezEG,G,YAxBO,SAACb,GAQnB,OACI,yBAAKC,UAAU,iBACX,4BACMD,EAAMc,OAEZ,6BACI,yBAAKb,UAAU,oBCehBc,EA1BM,SAACf,GAMlB,OAEQ,yBAAKC,UAAU,gBACV,YAAKe,MAAMhB,EAAMc,QACjBH,KAAI,SAAAG,GACD,OAAO,kBAAC,EAAD,CAAeA,MAAOA,EAAMA,EAAMG,QAAQ,IAAK,UAI1D,kBAAC,EAAD,CAAUP,KAAMV,EAAMU,KAAME,kBAAmBZ,EAAMY,sBCoBtDM,E,0LAhCcC,GACdA,EAAEC,iBACDC,QAAQC,IAAIH,EAAEI,U,+BAIjB,IAAD,OACCC,EAELC,OAAOC,QAAQC,KAAK3B,MAAM4B,SAASjB,KAAI,YAAyB,IAAD,mBAAtBD,EAAsB,KAAhBmB,EAAgB,UAG7D,OAAO,YAAIb,MAAMS,OAAOK,KAAKD,KAC7BlB,KAAI,SAACoB,EAASC,GAEX,OAAU,kBAAC,EAAD,CAAcC,IAAKD,EAAOtB,KAAMqB,EAASjB,MAAOJ,EAAME,kBAAmB,EAAKA,0BAKjG,OACI,yBAAKX,UAAU,iBACVuB,O,GAzBeU,aCwDbC,G,iNAxDVC,MACK,CACFC,WAAa,CAETC,IAAM,CACFC,MAAQ,IACRC,MAAO,IACPC,QAAQ,KAEZC,IAAM,CACFC,IAAM,IACNC,OAAQ,KAIhBC,gBAAkB,CACdC,KAAO,IACPC,MAAQ,KAIZC,KAAQ,CACJC,KAAO,IACPC,MAAO,KAIXC,UAAa,CACTC,MAAQ,IACRC,QAAS,KAGbC,gBAAmB,CACfF,MAAQ,IACRC,QAAS,O,wEAWjB,OACI,yBAAKpD,UAAU,QACX,kBAAC,EAAD,CAAe2B,QAASD,KAAKS,MAAMC,aACnC,kBAAC,EAAD,W,GAlDOH,cCqBJqB,E,iLAbb,OACE,yBAAKtD,UAAU,OAMb,kBAAC,EAAD,W,GAdYiC,aCKEsB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLnD,QAAQmD,MAAMA,EAAMC,c","file":"static/js/main.5a1041fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/plus.c767ee98.svg\";","import React from 'react'\r\n// import shop from '../shop/shop'\r\nimport '../cart/cart.css'\r\n\r\nconst cart = (props) => {\r\n\r\n    return (\r\n        <div className='cart'>\r\n            <p>Hello, shoppers!</p>\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default cart","import React from 'react'\r\nimport Plus from '../../../../../assets/img/plus.svg'\r\n// import Minus from '../../../../../assets/img/minus.svg'\r\nimport '../categoryItem/categoryItem.css'\r\n\r\nconst categoryitem = (props) => {\r\n\r\n    \r\n\r\n    return (\r\n        <div className='categoryItem'>\r\n            <li>{props.children}</li>\r\n            <div className='category-btn'>\r\n                \r\n                <div>\r\n                    <img onClick={props.increaseItemCount} className='btn-plus' src={Plus} alt= \"Text\"></img>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default categoryitem","import React from 'react'\r\nimport Categoryitem from './categoryItem/categoryItem'\r\n\r\n\r\nconst category = (props) => {\r\n\r\n    \r\n    \r\n\r\n    return (\r\n        \r\n            <ul className='category' >\r\n                \r\n                {props.item.map(item => {\r\n                      return <Categoryitem decreaseItemCount={props.decreaseItemCount}>{item}</Categoryitem>\r\n                    })\r\n                }\r\n                    \r\n            </ul>\r\n        \r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default category","import React from 'react'\r\n// import Categoryitem from './categoryItem/categoryItem'\r\nimport '../categoryTitle/categorytitle.css'\r\n\r\n\r\nconst categorytitle = (props) => {\r\n\r\n    // const item = Object.entries(props.item)\r\n    // .map(([item, count]) => {\r\n    //     return <Categoryitem key={item} item={item}></Categoryitem>\r\n    // })\r\n    \r\n\r\n    return (\r\n        <div className='categorytitle'>\r\n            <h1>\r\n                {(props.title)}\r\n            </h1>\r\n            <div>\r\n                <div className='categorybar'></div>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default categorytitle","import React from 'react'\r\nimport Category from '../BuildControl/category/category'\r\n// import Toggler from '../../../assets/nexticon.png'\r\nimport '../BuildControl/BuildControl.css'\r\nimport Categorytitle from '../BuildControl/categoryTitle/categorytitle'\r\n\r\n\r\n\r\nconst buildcontrol = (props) => {\r\n\r\n    \r\n    \r\n    \r\n\r\n    return (\r\n        \r\n            <div className='BuildControl' >\r\n                {([...Array(props.title)])\r\n                .map(title => {\r\n                    return <Categorytitle title={title=title.replace('_', \" \")}></Categorytitle>\r\n                })\r\n                }\r\n                \r\n                <Category item={props.item} decreaseItemCount={props.decreaseItemCount}></Category>\r\n                        \r\n                \r\n            </div>\r\n        \r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default buildcontrol","import React, {Component} from 'react'\r\nimport '../BuildControls/BuildControls.css'\r\nimport BuildControl from '../BuildControls/BuildControl/BuildControl'\r\n// import Categorytitle from '../BuildControls/BuildControl/categoryTitle/categorytitle'\r\n\r\n\r\n\r\n\r\nclass Buildcontrols extends Component  {\r\n\r\n    \r\n           decreaseItemCount(e){\r\n               e.preventDefault()\r\n                console.log(e.target)\r\n           } \r\n    \r\n  \r\n    render(){\r\n       const ul = \r\n\r\n        Object.entries(this.props.allshop).map(([item, list,index]) => {\r\n        //   ([...Array(item)])\r\n\r\n          return [...Array(Object.keys(list))]\r\n         .map((newItem, index) => {\r\n            //  console.log(newItem)\r\n             return (  <BuildControl key={index} item={newItem} title={item} decreaseItemCount={this.decreaseItemCount}></BuildControl>)    \r\n        })\r\n          \r\n\r\n        })\r\n    return (\r\n        <div className='buildcontrols'>\r\n            {ul}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n}\r\n\r\nexport default Buildcontrols","import React, {Component} from 'react'\r\nimport Cart from '../cart/cart'\r\nimport BuildControls from '../BuildControls/BuildControls'\r\nimport '../shop/shop.css'\r\n\r\n\r\nclass Shop extends Component {\r\n\r\n     state = \r\n          {\r\n        categories : {\r\n            \r\n            car : {\r\n                volvo : '1',\r\n                mazda: '2',\r\n                corrola:'1'\r\n            },\r\n            tel : {\r\n                mtn : '1',\r\n                airtel: '2',\r\n                \r\n            },\r\n        \r\n        confectionaries : {\r\n            cake : '1',\r\n            candy : '2'\r\n        }\r\n        ,\r\n        \r\n        food :  {\r\n            rice : '1',\r\n            beans: '2'\r\n        }\r\n        ,\r\n        \r\n        clothings :  {\r\n            shirt : '1',\r\n            Trouser: '2'\r\n        }\r\n        ,\r\n        home_Appliances :  {\r\n            shirt : '1',\r\n            Trouser: '2'\r\n        }\r\n        \r\n          }\r\n        }\r\n        \r\n\r\n    render (){\r\n\r\n        \r\n\r\n    return (\r\n        <div className='shop'>\r\n            <BuildControls allshop={this.state.categories} ></BuildControls>\r\n            <Cart></Cart>\r\n        </div>\r\n    )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Shop","import React, {Component} from 'react';\nimport './App.css';\n// import Cart from './components/cart/cart'\nimport Shop from './components/shop/shop'\n\n\n\nclass App extends Component {\n\n\n\n  \n  render(){\n\n  return (\n    <div className=\"App\">\n      {/* toolbar */}\n\n\n\n      {/* content */}\n      <Shop></Shop>\n    </div>       \n  )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}